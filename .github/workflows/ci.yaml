on: push
jobs:
  build-firmware:
    uses: ashep/ci/.github/workflows/esp-idf-build.yaml@v1
    with:
      app_name: cronus
      workdir: firmware

  publish-firmware:
    runs-on: ubuntu-latest
    needs:
      - build-firmware
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: release
      - name: Display structure of downloaded files
        run: ls -R
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "release/*"


  build-frontend:
    uses: ashep/ci/.github/workflows/js-build.yaml@v1
    with:
      workdir: frontend
      app_name: ${{ github.event.repository.name }}-gui
      registry_user: ${{ vars.REGISTRY_USER }}
    secrets:
      registry_password: ${{ secrets.REGISTRY_PASSWORD }}

  # deploy-frontend:
  #   uses: ashep/ci/.github/workflows/deploy-docker.yaml@v1
  #   needs:
  #     - build-frontend
  #   with:
  #     workdir: frontend
  #     app_name: ${{ github.event.repository.name }}-gui
  #     ssh_host: ${{ inputs.DEPLOY_SSH_HOST }}
  #     ssh_port: ${{ inputs.DEPLOY_SSH_PORT }}
  #     ssh_user: ${{ inputs.DEPLOY_SSH_USER }}

  #   secrets:
  #     ssh_key: ${{ secrets.DEPLOY_SSH_KEY }}
  #     dotenv: |
  #       HTTP_PORT=${{ vars.FRONTEND_SVC_LOCAL_HTTP_PORT }}
